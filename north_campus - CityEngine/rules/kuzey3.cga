/**
 * File:    kuzey3.cga
 * Created: 28 May 2016 18:08:50 GMT
 * Author:  Mr. Paksoy
 */



version "2010.3"



attr shapeType = ""
attr height = rand(15,25)


attr tilewidth = 3
@StartRule
Lot -->
	case shapeType == "LotInner" :
		Lot.
	else :
		extrude(height) comp(f) { side :  Facade | top:  Roof }

actualFloorHeight =  
	case scope.sy >= 1 : scope.sy/rint(scope.sy/floorheight)
	else : scope.sy
	
actualTileWidth = 
	case scope.sx >= 2 : scope.sx/rint(scope.sx/4)
	else : scope.sx

Facade -->
	setupProjection(0, scope.xy, scope.sx, scope.sy)
	
	texture("kuzey3.tif")
	projectUV(0)	


Roof --> roofHip(0) 
setupProjection(0, scope.xz, 1, 1.5)
projectUV(0)
texture("gri.tif") 	
Shape

attr windowWidth = 2.2
attr windowHeight = 2.8
	
UpperFloors --> split(y) {~floorheight: Floor }*

Floor --> split(x) {~tilewidth: Tile }*


Tile --> split(x) {~1:Wall | windowWidth : split(y) {~2:Wall | windowHeight : Window | ~1 : Wall } | ~1 : Wall}


Window --> 
	s('1, '1, 0.4) t(0,0,-0.2) i("assets/window/window.obj")
	setupProjection(0, scope.xy, scope.sx, scope.sy)
	projectUV(0)
	texture(fileRandom("*assets/window/1_rollo_*brown.tif")) 
	
Wall -->
	projectUV(0)
	texture("library.tif")
	
attr floorheight = 4.0


	


Door -->
	setupProjection(0, scope.xy, ~tilewidth*2, '1) 
	texture("shopwin.tif")
	projectUV(0)



	